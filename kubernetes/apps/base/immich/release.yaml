---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
  namespace: default
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      server:
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.136.0
            env:
              # Configure application
              <<: &env-common
                TZ: &tz "${TIMEZONE}"
                REDIS_HOSTNAME: immich-redis.default.svc.cluster.local
                IMMICH_LOG_LEVEL: debug
                IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              IMMICH_WORKERS_INCLUDE: api
            resources:
              requests:
                cpu: 50m
                memory: 250Mi
              limits:
                memory: 2Gi

      microservices:
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.136.0
            env:
              <<: *env-common
              IMMICH_WORKERS_EXCLUDE: api
            resources:
              requests:
                cpu: 100m
                memory: 250Mi
              limits:
                memory: 6Gi

      redis:
        containers:
          redis:
            image:
              repository: ghcr.io/valkey-io/valkey
              tag: 8.1.3
            resources:
              requests:
                cpu: 5m
                memory: 32Mi
              limits:
                memory: 128Mi

      machine-learning:
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.136.0
            env:
              <<: *env-common
              MPLCONFIGDIR: "/cache/matplotlib"
            resources:
              requests:
                cpu: 100m
                memory: 250M
              limits:
                memory: 2Gi

    service:
      server:
        primary: true
        controller: server
        ports:
          http:
            port: 2283
      microservices:
        controller: microservices
        ports:
          http:
            port: 2283
      redis:
        controller: redis
        ports:
          http:
            port: 6379
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
