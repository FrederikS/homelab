apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
  namespace: default
spec:
  values:

    controllers:
      server:
        pod:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: immich
                      app.kubernetes.io/controller: microservices
                  topologyKey: kubernetes.io/hostname
          nodeSelector:
            kubernetes.io/arch: amd64
        containers:
          main:
            image:
              tag: v1.137.3
            env:
              <<: &db-env
                # DB_URL:
                #   valueFrom:
                #     secretKeyRef:
                #       name: postgres-immich-app
                #       key: uri
                DB_HOSTNAME:
                  valueFrom:
                    secretKeyRef:
                      name: postgres-immich-app
                      key: host
                DB_USERNAME:
                  valueFrom:
                    secretKeyRef:
                      name: postgres-immich-app
                      key: username
                DB_PASSWORD:
                  valueFrom:
                    secretKeyRef:
                      name: postgres-immich-app
                      key: password
                DB_DATABASE_NAME:
                  valueFrom:
                    secretKeyRef:
                      name: postgres-immich-app
                      key: dbname

      microservices:
        pod:
          nodeSelector:
            kubernetes.io/hostname: razer
        containers:
          main:
            image:
              tag: v1.137.3
            env:
              <<: *db-env

      machine-learning:
        pod:
          nodeSelector:
            kubernetes.io/hostname: razer
        containers:
          main:
            image:
              tag: v1.137.3

    persistence:
      library:
        existingClaim: immich-library
        advancedMounts:
          server:
            main:
              - path: &mediaLocation /usr/src/app/upload
          microservices:
            main:
              - path: *mediaLocation
          machine-learning:
            main:
              - path: *mediaLocation
      cache:
        type: persistentVolumeClaim
        existingClaim: immich-ml-cache
        advancedMounts:
          machine-learning:
            main:
              - path: /cache
                subPath: cache
              - path: /.cache
                subPath: dotCache

    ingress:
      server:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: immich.fdk.codes
            paths:
              - path: /
                service:
                  identifier: server
                  port: http
        tls:
          - hosts:
              - immich.fdk.codes
