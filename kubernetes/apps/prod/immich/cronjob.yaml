---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: immich-backup-job
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: immich-backup-job
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: &name immich-backup-job
  namespace: default
subjects:
  - kind: ServiceAccount
    name: *name
    namespace: default
roleRef:
  kind: Role
  name: *name
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: immich-backup-job
  namespace: default
data:
  backup.sh: |
    #!/bin/sh

    echo "starting immich backup"
    apt-get update && apt-get install -y rsync
    rsync -av --delete --progress /mnt/immich-library/ /mnt/backup/upload/
    echo "finished immich backup"
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: immich-backup
  namespace: default
spec:
  schedule: "30 2 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      backoffLimit: 2
      activeDeadlineSeconds: 7200
      ttlSecondsAfterFinished: 86400
      template:
        spec:
          serviceAccount: immich-backup-job
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: immich
                      app.kubernetes.io/controller: server
                  topologyKey: kubernetes.io/hostname
          containers:
            - name: backup
              image: debian:bookworm-slim
              command: ["sh", "-c", "/scripts/backup.sh"]
              volumeMounts:
                - name: immich-library
                  mountPath: /mnt/immich-library
                - name: immich-backup-nfs
                  mountPath: /mnt/backup
                - name: script-volume
                  mountPath: /scripts/backup.sh
                  subPath: backup.sh
          restartPolicy: OnFailure
          volumes:
            - name: immich-library
              persistentVolumeClaim:
                claimName: immich-library
                readOnly: true
            - name: immich-backup-nfs
              persistentVolumeClaim:
                claimName: immich-backup-nfs
            - name: script-volume
              configMap:
                name: immich-backup-job
                items:
                  - key: backup.sh
                    path: backup.sh
                defaultMode: 0555 # read and execute
