---
apiVersion: ceph.rook.io/v1
kind: CephObjectStore
metadata:
  name: rook-ceph-object-store
spec:
  metadataPool:
    failureDomain: host
    replicated:
      size: 2
  dataPool:
    failureDomain: host
    replicated:
      size: 2
  preservePoolsOnDelete: true
  gateway:
    # sslCertificateRef:
    port: 80
    # securePort: 443
    instances: 1
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: rook-ceph-bucket
# Change "rook-ceph" provisioner prefix to match the operator namespace if needed
provisioner: rook-ceph.ceph.rook.io/bucket
reclaimPolicy: Delete
parameters:
  objectStoreName: rook-ceph-object-store
  objectStoreNamespace: rook-ceph
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
  name: ceph-object-store
spec:
  defaultBackend:
    service:
      name: rook-ceph-rgw-rook-ceph-object-store
      port:
        name: http
  ingressClassName: external
  rules:
    - host: "s3.${SECRET_DOMAIN}"
      http:
        paths:
          - backend:
              service:
                name: rook-ceph-rgw-rook-ceph-object-store
                port:
                  name: http
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - "s3.${SECRET_DOMAIN}"
