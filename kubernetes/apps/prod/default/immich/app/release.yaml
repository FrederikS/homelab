---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  values:
    controllers:
      server:
        pod:
          nodeSelector:
            kubernetes.io/hostname: razer
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.144.1
            env:
              # Configure application
              TZ: &tz "${TIMEZONE}"
              REDIS_HOSTNAME: immich-redis.default.svc.cluster.local
              IMMICH_LOG_LEVEL: debug
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              IMMICH_WORKERS_INCLUDE: api
              <<: &db-env
                DB_HOSTNAME:
                  valueFrom:
                    secretKeyRef:
                      name: postgres-immich-app
                      key: host
                DB_USERNAME:
                  valueFrom:
                    secretKeyRef:
                      name: postgres-immich-app
                      key: username
                DB_PASSWORD:
                  valueFrom:
                    secretKeyRef:
                      name: postgres-immich-app
                      key: password
                DB_DATABASE_NAME:
                  valueFrom:
                    secretKeyRef:
                      name: postgres-immich-app
                      key: dbname
            resources:
              requests:
                cpu: 50m
                memory: 250Mi
              limits:
                memory: 2Gi

      microservices:
        pod:
          nodeSelector:
            kubernetes.io/hostname: razer
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.144.1
            env:
              TZ: *tz
              REDIS_HOSTNAME: immich-redis.default.svc.cluster.local
              IMMICH_LOG_LEVEL: debug
              IMMICH_MEDIA_LOCATION: *mediaLocation
              IMMICH_WORKERS_EXCLUDE: api
              <<: *db-env
            resources:
              requests:
                cpu: 100m
                memory: 250Mi
              limits:
                memory: 6Gi

      redis:
        containers:
          redis:
            image:
              repository: ghcr.io/valkey-io/valkey
              tag: 8.1.3
            resources:
              requests:
                cpu: 5m
                memory: 32Mi
              limits:
                memory: 128Mi

      machine-learning:
        pod:
          nodeSelector:
            kubernetes.io/hostname: x240
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.143.1
            env:
              TZ: *tz
              REDIS_HOSTNAME: immich-redis.default.svc.cluster.local
              IMMICH_LOG_LEVEL: debug
              IMMICH_MEDIA_LOCATION: *mediaLocation
              MPLCONFIGDIR: "/cache/matplotlib"
            resources:
              requests:
                cpu: 100m
                memory: 250M
              limits:
                memory: 2Gi

    service:
      server:
        primary: true
        controller: server
        ports:
          http:
            port: 2283
      microservices:
        controller: microservices
        ports:
          http:
            port: 2283
      redis:
        controller: redis
        ports:
          http:
            port: 6379
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003

    persistence:
      library:
        existingClaim: immich-library
        advancedMounts:
          server:
            main:
              - path: *mediaLocation
          microservices:
            main:
              - path: *mediaLocation
      cache:
        type: persistentVolumeClaim
        existingClaim: immich-ml-cache
        advancedMounts:
          machine-learning:
            main:
              - path: /cache
                subPath: cache
              - path: /.cache
                subPath: dotCache

    ingress:
      server:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        hosts:
          - host: "immich.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: server
                  port: http
        tls:
          - hosts:
              - "immich.${SECRET_DOMAIN}"
