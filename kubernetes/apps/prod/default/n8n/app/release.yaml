# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: n8n
spec:
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  interval: 15m
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      n8n:
        pod:
          nodeSelector:
            kubernetes.io/arch: amd64
          securityContext:
            runAsUser: 1000
            runAsGroup: 65534
            fsGroup: 65534
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: ghcr.io/n8n-io/n8n
              tag: latest@sha256:90bf64ec238b88908389694b5ace00e5c17ea5d4a0af812dd266d7cfcd40984f
            env:
              NODE_ENV: production
              DB_SQLITE_POOL_SIZE: 10
              DB_SQLITE_VACUUM_ON_STARTUP: true
              EXECUTIONS_DATA_PRUNE: true
              EXECUTIONS_DATA_MAX_AGE: 7
              EXECUTIONS_DATA_PRUNE_MAX_COUNT: 50000
              GENERIC_TIMEZONE: ${TIMEZONE}
              N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
              N8N_PROTOCOL: "https"
              N8N_PORT: &port 8080
              N8N_HOST: &host n8n.${SECRET_DOMAIN}
              N8N_LOG_LEVEL: info
              N8N_LOG_OUTPUT: console
              N8N_DIAGNOSTICS_ENABLED: "false"
              N8N_RUNNERS_ENABLED: "true"
              N8N_BLOCK_ENV_ACCESS_IN_NODE: "false"
              WEBHOOK_URL: https://n8n.${SECRET_DOMAIN}/
              N8N_PROXY_HOPS: 1
              N8N_ENCRYPTION_KEY:
                valueFrom:
                  secretKeyRef:
                    name: n8n-secret
                    key: N8N_ENCRYPTION_KEY
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 2Gi

    service:
      app:
        ports:
          http:
            port: *port

    persistence:
      data:
        existingClaim: ${APP}
        advancedMounts:
          n8n:
            app:
              - path: /home/node/.n8n
      export:
        existingClaim: backup-nfs-${APP}
        advancedMounts:
          n8n:
            app:
              - path: /data/nfs/export

    ingress:
      app:
        className: internal

        hosts:
          - host: *host
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
